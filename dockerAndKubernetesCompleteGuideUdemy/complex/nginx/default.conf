# SERVER THAT ACTS LIKE A ROUTER BETWEEN BROWSER AND THE (CLIENT + SERVER) AKA CLIENT AND API


# setting port for the client in the container.
upstream client {
  server client:3000;
}

# setting port for the api in the container.
upstream api {
  server api:5000;
}

server {
  listen 80;

  # listen to port 80, and... send to client.
  location / { 
    proxy_pass http://client;
  }

  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # listen to port 80, and if there is api in the url...  take out api and send to api
  location /api {
    # match /api/(.*) i.e. its regex, and replace with $1, break is like a return, to stop loops. This is the stripping of //
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}